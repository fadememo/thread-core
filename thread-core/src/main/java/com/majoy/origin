//unfair
/**
!hasQueuedPredecessors()
阻塞队列有线程存在&&(首位阻塞节点线程为空||首位被阻塞的线程不是当前线程) 返回true
如果没有被阻塞的线程或者首位阻塞的线程是当前线程 返回false
*/
final boolean nonfairTryAcquire(int acquires) {
            final Thread current = Thread.currentThread();
            int c = getState();
            if (c == 0) {
                if (compareAndSetState(0, acquires)) {
                    setExclusiveOwnerThread(current);
                    return true;
                }
            }
            else if (current == getExclusiveOwnerThread()) {
                int nextc = c + acquires;
                if (nextc < 0) // overflow
                    throw new Error("Maximum lock count exceeded");
                setState(nextc);
                return true;
            }
            return false;
        }